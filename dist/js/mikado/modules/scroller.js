function initializeParallax(e){var t=e.querySelectorAll("*[parallax]"),o=[],r=!1;"none"==getComputedStyle(document.body).transform&&(document.body.style.transform="translateZ(0)");var l=document.createElement("div");l.style.position="fixed",l.style.top="0",l.style.width="1px",l.style.height="1px",l.style.zIndex=1,document.body.insertBefore(l,document.body.firstChild);for(var n=0;n<t.length;n++){var i=t[n],s=i.parentNode;if("visible"==getComputedStyle(s).overflow){e&&s.parentNode!=e&&console.warn("Currently we only track a single overflow clip, but elements from multiple clips found.",i);var e=s.parentNode;"visible"==getComputedStyle(e).overflow&&console.error("Parent of sticky container should be scrollable element",i);var a;r||getComputedStyle(e).webkitOverflowScrolling?(r=!0,a=s):(a=e,s.style.transformStyle="preserve-3d"),a.style.perspectiveOrigin="bottom right",a.style.perspective="1px",r&&(i.style.position="-webkit-sticky"),r&&(i.style.top="0"),i.style.transformOrigin="bottom right";for(var p=t[n].previousElementSibling;p&&p.hasAttribute("parallax");)p=p.previousElementSibling;for(var f=t[n].nextElementSibling;f&&!f.hasAttribute("parallax-cover");)f=f.nextElementSibling;o.push({node:t[n],top:t[n].offsetTop,sticky:!!r,nextCover:f,previousCover:p})}else console.error("Need non-scrollable container to apply perspective for",i)}e.addEventListener("scroll",function(){for(var t=0;t<o.length;t++){var r=o[t].node.parentNode,l=o[t].previousCover,n=o[t].nextCover,i=l?l.offsetTop+l.offsetHeight:0,s=n?n.offsetTop:r.offsetHeight,a=200,p=(i-a-e.clientHeight<e.scrollTop&&s+a>e.scrollTop,"block");o[t].node.style.display!=p&&(o[t].node.style.display=p)}}),window.addEventListener("resize",onResize.bind(null,o)),onResize(o);for(var n=0;n<t.length;n++)t[n].parentNode.insertBefore(t[n],t[n].parentNode.firstChild)}function onResize(e){for(var t=0;t<e.length;t++){var o=e[t].node.parentNode,r=o.parentNode,l=e[t].previousCover,n=e[t].nextCover,i=e[t].node.getAttribute("parallax"),s=l?l.offsetTop+l.offsetHeight:0,a=e[t].sticky?0:r.offsetWidth-r.clientWidth,p=(e[t].sticky?o:r,e[t].node.offsetHeight),f=0;if(i)f=1-1/i;else{var d=n?n.offsetTop:o.offsetHeight;f=(p-d+s)/(p-r.clientHeight)}e[t].sticky&&(f=1/f);var c=1/(1-f),v=a*(c-1),y=e[t].sticky?-(r.scrollHeight-s-p)*(1-c):(s-f*(p-r.clientHeight))*c;e[t].node.style.transform="scale("+(1-f)+") translate3d("+v+"px, "+y+"px, "+f+"px)"}}